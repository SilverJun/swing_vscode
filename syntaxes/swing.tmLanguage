<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>swing</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*\bswing</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>SWING</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shebang-line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#preprocessor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attribute</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#protocol-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#class-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#struct-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#enum-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#extension-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#basic-function-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#typealias-declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>access-control-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.access-control.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(public|internal|private)\b</string>
		</dict>
		<key>arithmetic-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.arithmetic.swing</string>
		</dict>
		<key>array-literal</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>constant.array.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.separator.array.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
			</array>
		</dict>
		<key>assignment-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+|\-|\*|\/|%|&lt;&lt;|&gt;&gt;|&amp;|\^|\||&amp;&amp;|\|\|)?=(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.assignment.swing</string>
		</dict>
		<key>attribute</key>
		<dict>
			<key>comment</key>
			<string>attribute</string>
			<key>name</key>
			<string>meta.attribute.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.swing</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-parameters.begin.swing</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.attribute.parameters.swing</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute-parameters.end.swing</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.attribute.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.attribute.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@)(\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B))</string>
				</dict>
			</array>
		</dict>
		<key>basic-function-declaration</key>
		<dict>
			<key>name</key>
			<string>meta.function.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#basic-function-declaration-header</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-body</string>
				</dict>
			</array>
		</dict>
		<key>basic-function-declaration-header</key>
		<dict>
			<key>begin</key>
			<string>\b(?=\w?[\w\s]*func\s+(?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)[\s]*)</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.identifier.function.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-function-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#struct-function-storage-modifiers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(func)\b</string>
					<key>name</key>
					<string>storage.type.function.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-result</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+</string>
					<key>name</key>
					<string>entity.name.function.swing</string>
				</dict>
			</array>
		</dict>
		<key>bitwise-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(&amp;|\||\^|&lt;&lt;|&gt;&gt;)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.bitwise.swing</string>
		</dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.swing</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#return-statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.begin.swing</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Block comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#documentation-comment</string>
				</dict>
			</array>
		</dict>
		<key>boolean-literal</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.boolean.swing</string>
		</dict>
		<key>builtin-class-and-struct-types</key>
		<dict>
			<key>match</key>
			<string>\b(Array|AutoreleasingUnsafeMutablePointer|BidirectionalReverseView|Bit|Bool|CFunctionPointer|COpaquePointer|CVaListPointer|Character|ClosedInterval|CollectionOfOne|ContiguousArray|Dictionary|DictionaryGenerator|DictionaryIndex|Double|EmptyCollection|EmptyGenerator|EnumerateGenerator|EnumerateSequence|FilterCollectionView|FilterCollectionViewIndex|FilterGenerator|FilterSequenceView|Float|Float80|FloatingPointClassification|GeneratorOf|GeneratorOfOne|GeneratorSequence|HalfOpenInterval|HeapBuffer|HeapBufferStorage|ImplicitlyUnwrappedOptional|IndexingGenerator|Int|Int16|Int32|Int64|Int8|LazyBidirectionalCollection|LazyForwardCollection|LazyRandomAccessCollection|LazySequence|MapCollectionView|MapSequenceGenerator|MapSequenceView|MirrorDisposition|ObjectIdentifier|OnHeap|Optional|PermutationGenerator|QuickLookObject|RandomAccessReverseView|Range|RangeGenerator|RawByte|Repeat|ReverseBidirectionalIndex|ReverseRandomAccessIndex|SequenceOf|SinkOf|Slice|StaticString|StrideThrough|StrideThroughGenerator|StrideTo|StrideToGenerator|String|UInt|UInt16|UInt32|UInt64|UInt8|UTF16|UTF32|UTF8|UnicodeDecodingResult|UnicodeScalar|Unmanaged|UnsafeBufferPointer|UnsafeBufferPointerGenerator|UnsafeMutableBufferPointer|UnsafeMutablePointer|UnsafePointer|Zip2|ZipGenerator2)\b</string>
			<key>name</key>
			<string>support.type.built-in.swing</string>
		</dict>
		<key>builtin-constants</key>
		<dict>
			<key>name</key>
			<string>support.constant.built-in.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-foundation-constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-coregraphics-constants</string>
				</dict>
			</array>
		</dict>
		<key>builtin-coregraphics-constants</key>
		<dict>
			<key>match</key>
			<string>\b(CG(Vector|Point|Rect)Zero)\b</string>
			<key>name</key>
			<string>support.constant.coregraphics.built-in.swing</string>
		</dict>
		<key>builtin-coregraphics-types</key>
		<dict>
			<key>match</key>
			<string>\bCG(Vector|Float|Point|Rect|Size|Path(Ref)?)\b</string>
			<key>name</key>
			<string>support.type.built-in.coregraphics.swing</string>
		</dict>
		<key>builtin-foundation-constants</key>
		<dict>
			<key>match</key>
			<string>\b(NS(App))\b</string>
			<key>name</key>
			<string>support.constant.foundation.built-in.swing</string>
		</dict>
		<key>builtin-function-names</key>
		<dict>
			<key>contentName</key>
			<string>support.function.built-in.swing</string>
			<key>name</key>
			<string>support.function.built-in.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#special-function-names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-global-function-names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
			</array>
		</dict>
		<key>builtin-global-function-names</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.built-in.global.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(abs|advance|alignof|alignofValue|assert|assertionFailure|contains|count|countElements|debugPrint|debugPrintln|distance|dropFirst|dropLast|dump|enumerate|equal|extend|fatalError|filter|find|first|getVaList|indices|insert|isEmpty|join|last|lazy|lexicographicalCompare|map|max|maxElement|min|minElement|numericCast|overlaps|partition|precondition|preconditionFailure|prefix|print|println|reduce|reflect|removeAll|removeAtIndex|removeLast|removeRange|reverse|sizeof|sizeofValue|sort|sorted|splice|split|startsWith|stride|strideof|strideofValue|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeAddressOf|unsafeBitCast|unsafeDowncast|withExtendedLifetime|withUnsafeMutablePointer|withUnsafeMutablePointers|withUnsafePointer|withUnsafePointers|withVaList)\b</string>
		</dict>
		<key>builtin-numeric-types</key>
		<dict>
			<key>match</key>
			<string>\b(Double|Float|(U)?Int(8|16|32|64)?|NSTimeInterval)\b</string>
			<key>name</key>
			<string>support.type.built-in.numeric.swing</string>
		</dict>
		<key>builtin-protocol-types</key>
		<dict>
			<key>match</key>
			<string>\b(AbsoluteValuable|AnyObject|ArrayLiteralConvertible|BidirectionalIndexType|BitwiseOperationsType|BooleanLiteralConvertible|BooleanType|CVarArgType|CollectionType|Comparable|DebugPrintable|DictionaryLiteralConvertible|Equatable|ExtendedGraphemeClusterLiteralConvertible|ExtensibleCollectionType|FloatLiteralConvertible|FloatingPointType|ForwardIndexType|GeneratorType|Hashable|IntegerArithmeticType|IntegerLiteralConvertible|IntegerType|IntervalType|MirrorType|MutableCollectionType|MutableSliceable|NilLiteralConvertible|OutputStreamType|Printable|RandomAccessIndexType|RangeReplaceableCollectionType|RawOptionSetType|RawRepresentable|Reflectable|SequenceType|SignedIntegerType|SignedNumberType|SinkType|Sliceable|Streamable|Strideable|StringInterpolationConvertible|StringLiteralConvertible|UnicodeCodecType|UnicodeScalarLiteralConvertible|UnsignedIntegerType|_ArrayBufferType|_BidirectionalIndexType|_CocoaStringType|_CollectionType|_Comparable|_ExtensibleCollectionType|_ForwardIndexType|_Incrementable|_IntegerArithmeticType|_IntegerType|_ObjectiveCBridgeable|_RandomAccessIndexType|_RawOptionSetType|_SequenceType|_Sequence_Type|_SignedIntegerType|_SignedNumberType|_Sliceable|_Strideable|_SwiftNSArrayRequiredOverridesType|_SwiftNSArrayType|_SwiftNSCopyingType|_SwiftNSDictionaryRequiredOverridesType|_SwiftNSDictionaryType|_SwiftNSEnumeratorType|_SwiftNSFastEnumerationType|_SwiftNSStringRequiredOverridesType|_SwiftNSStringType|_UnsignedIntegerType)\b</string>
			<key>name</key>
			<string>support.type.built-in.protocol.swing</string>
		</dict>
		<key>builtin-spritekit-types</key>
		<dict>
			<key>match</key>
			<string>\bSK((Emitter|Sprite|Shape|Label|Light|Effect|Crop|Video)?Node|Action|Scene|Texture|View|Constraint|(Physics(Body|Contact(Delegate)?|World|Joint(Fixed|Pin|Limit|Spring|Sliding)?)))\b</string>
			<key>name</key>
			<string>support.type.built-in.spritekit.swing</string>
		</dict>
		<key>builtin-typealiases</key>
		<dict>
			<key>match</key>
			<string>\b(Any|AnyClass|BooleanLiteralType|CBool|CChar|CChar16|CChar32|CDouble|CFloat|CInt|CLong|CLongLong|CShort|CSignedChar|CUnsignedChar|CUnsignedInt|CUnsignedLong|CUnsignedLongLong|CUnsignedShort|CWideChar|ExtendedGraphemeClusterType|Float32|Float64|FloatLiteralType|IntMax|IntegerLiteralType|StringLiteralType|UIntMax|UWord|UnicodeScalarType|Void|Word)\b</string>
			<key>name</key>
			<string>support.type.built-in.typealias.swing</string>
		</dict>
		<key>builtin-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-class-and-struct-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-numeric-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-protocol-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-typealiases</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-coregraphics-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-uikit-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-spritekit-types</string>
				</dict>
			</array>
		</dict>
		<key>builtin-uikit-types</key>
		<dict>
			<key>match</key>
			<string>\bUI(TableView(Controller|Delegate|DataSource)?)\b</string>
			<key>name</key>
			<string>support.type.built-in.uikit.swing</string>
		</dict>
		<key>builtin-values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-function-names</string>
				</dict>
			</array>
		</dict>
		<key>case-statement</key>
		<dict>
			<key>begin</key>
			<string>\b(case|default)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.switch.case.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>:</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.switch.case.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#case-statement-variable-binding</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#case-statement-where-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-value-shorthand</string>
				</dict>
			</array>
		</dict>
		<key>case-statement-variable-binding</key>
		<dict>
			<key>begin</key>
			<string>\b(var|let)\s+\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.switch.case-statement.variable-binding.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\:)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\s?[=|\(|\)|,]</string>
					<key>name</key>
					<string>punctuation.control.switch.case.variable-binding.swing</string>
				</dict>
			</array>
		</dict>
		<key>case-statement-where-clause</key>
		<dict>
			<key>begin</key>
			<string>\b(where)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.switch.case.where.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\:)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>class-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:class)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(class)\s+(\w+)</string>
					<key>name</key>
					<string>meta.identifier.object.class.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=:\s*\w)</string>
					<key>end</key>
					<string>(?={)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#multi-type-specification</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.class.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.class.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-variable-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#struct-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enum-declaration</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>class-function-storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.function.class.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(override|class)\b</string>
		</dict>
		<key>class-variable-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\(\)\s]*(?:var|let)\s+\w+)</string>
			<key>end</key>
			<string>(?=[\=])|\}|$</string>
			<key>name</key>
			<string>meta.variable.declaration.class.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#class-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>class-variable-storage-modifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#complex-access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scoped-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.variable.class.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(lazy|class|override)\b</string>
				</dict>
			</array>
		</dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-statement-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch-case-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#basic-function-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scoped-variable-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#init-function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-subscript-access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-dot-access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stuff-that-needs-a-home</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#mark-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#documentation-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#in-line-comment</string>
				</dict>
			</array>
		</dict>
		<key>comparative-operator</key>
		<dict>
			<key>match</key>
			<string>([!=]?==|[\&lt;\&gt;]=|~=)</string>
			<key>name</key>
			<string>support.function.operator.comparative.swing</string>
		</dict>
		<key>complex-access-control-modifiers</key>
		<dict>
			<key>begin</key>
			<string>\s+(?=(?:internal|private)\s*\()</string>
			<key>contentName</key>
			<string>storage.modifier.access-control.complex.swing</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.keyword.access-control.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.access-control.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(internal|private)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.keyword.access-control.begin.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\()</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.access-control.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(set)\b</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-constants</string>
				</dict>
			</array>
		</dict>
		<key>custom-operator</key>
		<dict>
			<key>match</key>
			<string>([\?\!=\&lt;\&gt;\*~%\\\/\^«»\+\-\|\&amp;\.±]++)</string>
			<key>name</key>
			<string>entity.name.function.operator.custom.swing</string>
		</dict>
		<key>documentation-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.begin.swing</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Documentation comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.block.documentation.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.documentation.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#documentation-comment</string>
				</dict>
			</array>
		</dict>
		<key>else-if-statement</key>
		<dict>
			<key>begin</key>
			<string>\b(else\s+if)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.else-if.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
		</dict>
		<key>else-statement</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.else.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(else)\s*(?=\{)</string>
		</dict>
		<key>enum-case-associated-values-declaration</key>
		<dict>
			<key>begin</key>
			<string>\s+([a-zA-Z_\$][a-zA-Z0-9_\$]*)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.enum.case.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.enum.case.associated-type-list.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.enum.case.associated-type-list.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-parameter-declaration</string>
				</dict>
			</array>
		</dict>
		<key>enum-case-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(case)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.enum.case.swing</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>ENUM-CASE-VALUE-DECLARATION</string>
			<key>end</key>
			<string>(?=\s*(case|public|private|internal|static|func|subscript|init|deinit|typealias|\})\s+)</string>
			<key>name</key>
			<string>meta.declaration.enum.case.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-case-value-declaration</string>
				</dict>
			</array>
		</dict>
		<key>enum-case-value-declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#enum-case-value-equals-constant-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-case-associated-values-declaration</string>
				</dict>
			</array>
		</dict>
		<key>enum-case-value-equals-constant-declaration</key>
		<dict>
			<key>begin</key>
			<string>(,)?\s*([\p{Alpha}_\$][\p{Alnum}_\$]*)\s*(\=)\s*(?=\S)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.enum.case.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.enum.case.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.enum.case.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\S)</string>
			<key>name</key>
			<string>VALUE-EQUALS-CONSTANT</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
			</array>
		</dict>
		<key>enum-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:enum)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.enum.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.enum.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.enum.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(enum)\s+([a-zA-Z_\$][a-zA-Z0-9_\$]*)</string>
					<key>name</key>
					<string>meta.identifier.object.enum.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=:\s*\w)</string>
					<key>end</key>
					<string>(?={)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#multi-type-specification</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.enum.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.enum.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enum-case-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#struct-variable-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>enum-value-shorthand</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.name.enum-value.shorthand.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.enum-value.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\.)\s*([a-zA-Z0-9_]+)</string>
			<key>name</key>
			<string>enum-value-shorthand</string>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#super-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#self-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#init-function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-lvalue</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
			</array>
		</dict>
		<key>extension-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*extension\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.extension.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.extension.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#extension-declaration-header</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.extension.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.extension.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extension-variable-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#struct-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enum-declaration</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>extension-declaration-header</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*extension\s+\w+)</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.extension.declaration.header.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.extension.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(extension)\s+(\w+)</string>
					<key>name</key>
					<string>meta.identifier.object.extension.swing</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=:\s*\w)</string>
					<key>end</key>
					<string>(?={)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#multi-type-specification</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>extension-function-storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.function.extension.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(static|class)\b</string>
		</dict>
		<key>extension-variable-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\(\)\s]*(?:var|let)\s+\w+)</string>
			<key>end</key>
			<string>(})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.variable.block.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.variable.declaration.extension.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#extension-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>extension-variable-storage-modifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#complex-access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scoped-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.variable.extension.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(class|static)\b</string>
				</dict>
			</array>
		</dict>
		<key>floating-point-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.floating-point.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>floating-point-literal -&gt; (decimal-literal)(decimal-fraction)?(decimal-exponent)?</string>
					<key>match</key>
					<string>\b([0-9][0-9_]*)(\.([0-9][0-9_]*))?([eE][+\-]?([0-9][0-9_]*))?\b</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>floating-point-literal -&gt; (hexadecimal-literal)(hexadecimal-fraction)?(hexadecimal-exponent)</string>
					<key>match</key>
					<string>\b(0x\h[\h_]*)(\.(0x\h[\h_]*))?([pP][+\-]?(0x\h[\h_]*))\b</string>
				</dict>
			</array>
		</dict>
		<key>for-loop</key>
		<dict>
			<key>begin</key>
			<string>\b(?=for\s+)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.loop.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bfor\b</string>
					<key>name</key>
					<string>keyword.declaration.loop.for.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-binding</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#for-loop-in-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop-body</string>
				</dict>
			</array>
		</dict>
		<key>for-loop-in-clause</key>
		<dict>
			<key>begin</key>
			<string>\b(in)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.loop.for.in.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
			</array>
		</dict>
		<key>function-body</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.body.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#return-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_\$][a-zA-Z0-9_\$]*)\s*([\!\?\s]*)\s*(?=[\(])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter-list.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.call.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-call-parameter-list</string>
				</dict>
			</array>
		</dict>
		<key>function-call-parameter</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\(|,)\s*(?:([a-zA-Z0-9_\$]+)\s*(:))?\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.parameter.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter.name.suffix.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=,|\))</string>
			<key>name</key>
			<string>meta.function.call.parameter.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#values-and-blocks</string>
				</dict>
			</array>
		</dict>
		<key>function-call-parameter-list</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter-list.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\))</string>
			<key>name</key>
			<string>meta.function.call.parameter-list.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-call-parameter</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.function.parameter-list.separator.swing</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#init-function-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#basic-function-declaration</string>
				</dict>
			</array>
		</dict>
		<key>function-names</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-function-names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shorthand-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tuple-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-composition-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-type</string>
				</dict>
			</array>
		</dict>
		<key>function-parameter-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(#)?([a-zA-Z_\$][a-zA-Z0-9_\$]*)(?:\s+([a-zA-Z_\$][a-zA-Z0-9_\$]*))?\s*(?=:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter.name.prefix.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.parameter.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.parameter.internal.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(,)|(?=\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter.separator.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=[^\.])(\.\.\.)(?=[^\.])</string>
					<key>name</key>
					<string>punctuation.function.parameter.varargs.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
			</array>
		</dict>
		<key>function-parameter-list-declaration</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter-list.declaration.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter-list.declaration.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.parameter-list.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-parameter-declaration</string>
				</dict>
			</array>
		</dict>
		<key>function-result</key>
		<dict>
			<key>begin</key>
			<string>(\-\&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-result.swing</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>entity.name.type.swing</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.function.result.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-list</key>
		<dict>
			<key>begin</key>
			<string>(\&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.begin.swing</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>entity.name.type.generic.parameter-list.swing</string>
			<key>end</key>
			<string>(\&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.separator.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-list-declaration</key>
		<dict>
			<key>begin</key>
			<string>(\&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.declaration.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.declaration.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bwhere\b</string>
					<key>name</key>
					<string>keyword.declaration.parameter-list.where-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration-constraint</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.separator.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-list-declaration-constraint</key>
		<dict>
			<key>begin</key>
			<string>(==|:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.generic-type.parameter-list.where-clause.constraint.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?:,|\&gt;|\bwhere\b))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b([a-zA-Z_\$][a-zA-Z0-9_\$]*)\b</string>
					<key>name</key>
					<string>entity.name.type.generic-parameter.swing</string>
				</dict>
			</array>
		</dict>
		<key>generic-parameter-list-declaration-where-clause</key>
		<dict>
			<key>begin</key>
			<string>\b(where)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.parameter-list.where-clause</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
			</array>
		</dict>
		<key>generic-type</key>
		<dict>
			<key>begin</key>
			<string>(?=[a-zA-Z_\$][a-zA-Z0-9_\$]*\s*\&lt;)</string>
			<key>end</key>
			<string>(?&lt;=&gt;)</string>
			<key>name</key>
			<string>entity.name.type.generic.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#simple-type-name</string>
				</dict>
			</array>
		</dict>
		<key>if-let-statement</key>
		<dict>
			<key>begin</key>
			<string>(?=\s+if\s+let\s+)</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.control-statement.if-let.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(if)\b</string>
					<key>name</key>
					<string>keyword.control.if.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scoped-variable-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
			</array>
		</dict>
		<key>if-statement</key>
		<dict>
			<key>begin</key>
			<string>\b(if)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>if-statement-block</key>
		<dict>
			<key>begin</key>
			<string>(?=\s+(?:if|else\s+if|else)\s+)</string>
			<key>contentName</key>
			<string>meta.control-statement.if.swing</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.control-statement.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#else-if-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#else-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-let-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-statement</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.control-statement.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.control-statement.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#return-statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>implicitly-unwrapped-optional-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\!)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.implicitly-unwrapped-optional.swing</string>
		</dict>
		<key>import-declaration</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.type.module.import.swing</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>import-declaration</string>
			<key>match</key>
			<string>\b(import)\s+(?:(typealias|struct|class|enum|protocol|var|func)\s+)?((?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+)(?:\.(?:\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+))*)</string>
			<key>name</key>
			<string>meta.import.swing</string>
		</dict>
		<key>in-line-comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.double-slash.swing</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In-line comment</string>
			<key>match</key>
			<string>(//).*$</string>
			<key>name</key>
			<string>comment.line.double-slash.swing</string>
		</dict>
		<key>increment-decrement-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\+\+|\-\-)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.increment-or-decrement.swing</string>
		</dict>
		<key>init-function-call</key>
		<dict>
			<key>begin</key>
			<string>\b(init)\s*(?=[\(])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.object.init.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.function.parameter-list.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.call.init.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-call-parameter-list</string>
				</dict>
			</array>
		</dict>
		<key>init-function-declaration</key>
		<dict>
			<key>name</key>
			<string>meta.function.declaration.init.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#init-function-declaration-header</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-body</string>
				</dict>
			</array>
		</dict>
		<key>init-function-declaration-header</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:init|subscript)\b)</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.identifier.function.init.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#init-function-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.function.constructor.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(init)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.function.subscript.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(subscript)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.name.function.constructor.failable.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\?)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-parameter-list-declaration</string>
				</dict>
			</array>
		</dict>
		<key>init-function-storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.function.constructor.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(required|convenience|override)\b</string>
		</dict>
		<key>integer-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>binary-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0b[01][01_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.binary.swing</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>octal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0o[0-7][0-7_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.octal.swing</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>decimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)([0-9][0-9_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.swing</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>hexadecimal-literal</string>
					<key>match</key>
					<string>(\B\-|\b)(0x\h[\h_]*)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.swing</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#array-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nil-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolean-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#integer-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#floating-point-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#special-literal</string>
				</dict>
			</array>
		</dict>
		<key>logical-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(!|&amp;&amp;|\|\|)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.logical.swing</string>
		</dict>
		<key>loop</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#for-loop</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#while-loop</string>
				</dict>
			</array>
		</dict>
		<key>loop-body</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.loop.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\})</string>
			<key>name</key>
			<string>meta.section.loop-body.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop-keywords</string>
				</dict>
			</array>
		</dict>
		<key>loop-keywords</key>
		<dict>
			<key>match</key>
			<string>\b(continue|break)\b</string>
			<key>name</key>
			<string>keyword.control.loop.swing</string>
		</dict>
		<key>mark-comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.double-slash.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.identifier.section.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//)\s*MARK:\s*(.*)$</string>
			<key>name</key>
			<string>comment.line.mark.swing</string>
		</dict>
		<key>multi-type-specification</key>
		<dict>
			<key>begin</key>
			<string>(:)\s*(?=\w)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.type-specification.prefix.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[\=\&gt;\)\{\}])|$</string>
			<key>name</key>
			<string>meta.type-specification.multiple.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.type-specification.multiple.separator.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#simple-type-name</string>
				</dict>
			</array>
		</dict>
		<key>nil-coalescing-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\?\?)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.nil-coalescing.swing</string>
		</dict>
		<key>nil-literal</key>
		<dict>
			<key>match</key>
			<string>\b(nil)\b</string>
			<key>name</key>
			<string>constant.nil.swing</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>name</key>
			<string>support.function.operator.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#nil-coalescing-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comparative-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logical-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#remainder-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#increment-decrement-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#overflow-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ternary-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-casting-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#custom-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#implicitly-unwrapped-optional-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#optional-operator</string>
				</dict>
			</array>
		</dict>
		<key>operator-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(?=\w?[\w\s]*operator\s+)</string>
			<key>contentName</key>
			<string>meta.operator.swing</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.operator.block.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#operator-declaration-keywords</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(operator)\b</string>
					<key>name</key>
					<string>keyword.declaration.operator.swing</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.declaration.operator.block.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#operator-declaration-inner-keywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#integer-literal</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operator-declaration-inner-keywords</key>
		<dict>
			<key>match</key>
			<string>\b(associativity|left|right|precedence)\b</string>
			<key>name</key>
			<string>keyword.declaration.operator.positional.swing</string>
		</dict>
		<key>operator-declaration-keywords</key>
		<dict>
			<key>match</key>
			<string>\b(infix|postfix|prefix)\b</string>
			<key>name</key>
			<string>keyword.declaration.operator.positional.swing</string>
		</dict>
		<key>optional-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(\?)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.optional.swing</string>
		</dict>
		<key>overflow-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\&amp;(\+|\-|\*|\/|%)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.overflow.swing</string>
		</dict>
		<key>preprocessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.preprocessor.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(if|else(\s+if)?|endif)\b</string>
					<key>name</key>
					<string>meta.preprocessor.swing</string>
				</dict>
			</array>
		</dict>
		<key>protocol-basic-function-declaration-header</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:func)\s+\w+)</string>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>name</key>
			<string>meta.identifier.function.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(class)\b</string>
					<key>name</key>
					<string>storage.modifier.function.swing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(func)\b</string>
					<key>name</key>
					<string>storage.type.function.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-function-result</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\B\$[0-9]+|\b[\w^\d][\w\d]*\b|\B`[\w^\d][\w\d]*`\B|[/=\-+!*%&lt;&gt;&amp;|\^~.]+</string>
					<key>name</key>
					<string>entity.name.function.swing</string>
				</dict>
			</array>
		</dict>
		<key>protocol-composition-type</key>
		<dict>
			<key>begin</key>
			<string>(protocol)\s*(?=\&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.definition.protocol-composition.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=&gt;)</string>
			<key>name</key>
			<string>entity.name.type.protocol-composition.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list</string>
				</dict>
			</array>
		</dict>
		<key>protocol-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:protocol)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.protocol.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.protocol.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.protocol.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.protocol.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#protocol-variable-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#protocol-basic-function-declaration-header</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.protocol.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(protocol)\s+(\w+)</string>
					<key>name</key>
					<string>meta.identifier.object.protocol.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-declaration-multi-type-specification</string>
				</dict>
			</array>
		</dict>
		<key>protocol-declaration-multi-type-specification</key>
		<dict>
			<key>begin</key>
			<string>(:)\s*(?=\w)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.type-specification.prefix.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.type-specification.multiple.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bclass\b</string>
					<key>name</key>
					<string>keyword.declaration.protocol.modifier.swing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.type-specification.multiple.separator.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
			</array>
		</dict>
		<key>protocol-function-result</key>
		<dict>
			<key>name</key>
			<string>meta.function.result.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\-\&gt;)</string>
					<key>name</key>
					<string>keyword.operator.function-result.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
			</array>
		</dict>
		<key>protocol-variable-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(var)\s+([^:]+)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.variable.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.variable.body.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.protocol.declaration.variable-requirement.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-variable-declaration-availability-keywords</string>
				</dict>
				<dict>
					<key>match</key>
					<string>({)</string>
					<key>name</key>
					<string>punctuation.declaration.variable.body.begin.swing</string>
				</dict>
			</array>
		</dict>
		<key>protocol-variable-declaration-availability-keywords</key>
		<dict>
			<key>match</key>
			<string>\b(get|set)\b</string>
			<key>name</key>
			<string>keyword.declaration.protocol.variable-availability.swing</string>
		</dict>
		<key>range-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\.\.(?:\.)?(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.range.swing</string>
		</dict>
		<key>remainder-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])\%(?![/=\-+!*%&lt;&gt;&amp;|\^~.])</string>
			<key>name</key>
			<string>support.function.operator.remainder.swing</string>
		</dict>
		<key>return-statement</key>
		<dict>
			<key>begin</key>
			<string>\b(return)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.return.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\s*\})</string>
			<key>name</key>
			<string>meta.control-statement.return.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>scoped-variable-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=(?:(?:weak|unsafe)\s+)*(?:var|let)\s+\w+)</string>
			<key>end</key>
			<string>(?=\=)|$</string>
			<key>name</key>
			<string>meta.variable.declaration.scoped.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#scoped-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>scoped-variable-storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.variable.scoped.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(weak|unsafe)\b</string>
		</dict>
		<key>self-expression</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.object.self.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.variable.dot.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(self)(\.)?</string>
		</dict>
		<key>shebang-line</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.line.shebang.swing</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Shebang line</string>
			<key>match</key>
			<string>^(#!).*$</string>
			<key>name</key>
			<string>comment.line.shebang.swing</string>
		</dict>
		<key>shorthand-type</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.type.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.type.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>entity.name.type.shorthand.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(:)</string>
					<key>name</key>
					<string>punctuation.definition.separator.dictionary.swing</string>
				</dict>
			</array>
		</dict>
		<key>simple-type</key>
		<dict>
			<key>begin</key>
			<string>(?=[a-zA-Z_\$][a-zA-Z0-9_\$]*\b)</string>
			<key>contentName</key>
			<string>entity.name.type.basic.swing</string>
			<key>end</key>
			<string>(?=\b)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#simple-type-name</string>
				</dict>
			</array>
		</dict>
		<key>simple-type-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-types</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:[a-zA-Z_\$][a-zA-Z0-9_\$]*)</string>
					<key>name</key>
					<string>entity.name.type.swing</string>
				</dict>
			</array>
		</dict>
		<key>simple-variable-name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_\$][a-zA-Z0-9_\$]*)([\!\?\s]*)\b</string>
		</dict>
		<key>special-function-names</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.built-in.special.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(init|subscript)\b</string>
		</dict>
		<key>special-literal</key>
		<dict>
			<key>match</key>
			<string>\b__(FILE|LINE|COLUMN|FUNCTION)__\b</string>
			<key>name</key>
			<string>keyword.other.literal.swing</string>
		</dict>
		<key>string-literal</key>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([0tnr\"\'\\]|x\h{2}|u\h{4}|U\h{8})</string>
					<key>name</key>
					<string>constant.character.escape.swing</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\\\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.punctuation.expression.begin.swing</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.expression.swing</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.punctuation.expression.end.swing</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.swing</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\"|\\)</string>
					<key>name</key>
					<string>invalid.illegal.swing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(.)</string>
					<key>name</key>
					<string>string.quoted.double.swing</string>
				</dict>
			</array>
		</dict>
		<key>struct-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:struct)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.struct.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.struct.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.struct.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(struct)\s+(\w+)</string>
					<key>name</key>
					<string>meta.identifier.object.struct.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-list-declaration</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=:\s*\w)</string>
					<key>end</key>
					<string>(?={)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#multi-type-specification</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.struct.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.struct.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typealias-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#struct-variable-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#struct-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enum-declaration</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>struct-function-storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.function.struct.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b((?:non)?mutating|static)\b</string>
		</dict>
		<key>struct-variable-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\(\)\s]*(?:var|let)\s+\w+)</string>
			<key>end</key>
			<string>(?=[\=])|\}|$</string>
			<key>name</key>
			<string>meta.variable.declaration.struct.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#struct-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>struct-variable-storage-modifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#complex-access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scoped-variable-storage-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.variable.struct.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(lazy|static)\b</string>
				</dict>
			</array>
		</dict>
		<key>stuff-that-needs-a-home</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bin\b</string>
					<key>name</key>
					<string>keyword.other.in.swing</string>
				</dict>
			</array>
		</dict>
		<key>super-expression</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.object.super.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.variable.dot.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(super)(\.)?</string>
		</dict>
		<key>switch-case-block</key>
		<dict>
			<key>begin</key>
			<string>(?=\s+switch\s+)</string>
			<key>contentName</key>
			<string>meta.control-statement.switch.swing</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.control-statement.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bswitch\b</string>
					<key>name</key>
					<string>keyword.control.switch.swing</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.control-statement.begin.swing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.control-statement.body.swing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#case-statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#switch-inner-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#loop-keywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#return-statement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>switch-inner-keyword</key>
		<dict>
			<key>match</key>
			<string>\b(fallthrough)\b</string>
			<key>name</key>
			<string>keyword.control.switch.swing</string>
		</dict>
		<key>symbol-list-functions</key>
		<dict>
			<key>begin</key>
			<string>^\s*(public|private|internal|override|final)*\s+(func|(de)?init|subscript|operator)\s+</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.function.symbols.swing</string>
		</dict>
		<key>ternary-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=[\s(\[{,;:])(\?|:)(?=[\s)\]},;:])</string>
			<key>name</key>
			<string>support.function.operator.ternary.swing</string>
		</dict>
		<key>tuple-type</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>entity.name.type.tuple.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.definition.tuple.separator.swing</string>
				</dict>
			</array>
		</dict>
		<key>type-casting-operator</key>
		<dict>
			<key>match</key>
			<string>\b(is\b|as(\?\B|\b))</string>
			<key>name</key>
			<string>support.function.operator.type-casting.swing</string>
		</dict>
		<key>type-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\?|\!)</string>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shorthand-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tuple-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#protocol-composition-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-types</string>
				</dict>
			</array>
		</dict>
		<key>type-specification</key>
		<dict>
			<key>begin</key>
			<string>(:)\s*(?=[\[\w])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.type-specification.prefix.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[,\=\&gt;\)\{\}]|\.\.\.|\bwhere\b)|$</string>
			<key>name</key>
			<string>meta.type-specification.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#simple-type-name</string>
				</dict>
			</array>
		</dict>
		<key>typealias-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:typealias)\s+\w+)</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.typealias.declaration.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#access-control-modifiers</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.typealias.swing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.typealias.swing</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.typealias.swing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(typealias)\s+(\w+)\s+(=)\s+</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
			</array>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>values-and-blocks</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>variable-binding</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-declaration-keyword</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([,\(\)=])</string>
					<key>name</key>
					<string>punctuation.declaration.variable-binding.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-specification</string>
				</dict>
			</array>
		</dict>
		<key>variable-declaration-block</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.declaration.variable.block.begin.swing</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.variable.declaration.block.swing</string>
			<key>end</key>
			<string>(?=\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#return-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>variable-declaration-keyword</key>
		<dict>
			<key>match</key>
			<string>\b(var|let)\s+</string>
			<key>name</key>
			<string>keyword.declaration.variable.swing</string>
		</dict>
		<key>variable-dot-access</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.variable.dot.swing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_\$][a-zA-Z0-9_\$]*)\s*([\!\?\s]*)\s*(\.)\s*(?=[a-zA-Z0-9_\$])</string>
			<key>name</key>
			<string>meta.dot-access.swing</string>
		</dict>
		<key>variable-lvalue</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-subscript-access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-dot-access</string>
				</dict>
			</array>
		</dict>
		<key>variable-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#simple-variable-name</string>
				</dict>
			</array>
		</dict>
		<key>variable-subscript-access</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_\$][a-zA-Z0-9_\$]*)\s*([\!\?\s]*)\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.swing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.type.optional.swing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.subscript.begin.swing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.subscript.end.swing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.subscript-access.swing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
			</array>
		</dict>
		<key>while-loop</key>
		<dict>
			<key>begin</key>
			<string>\b(?=while\s+)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.loop.end.swing</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bwhile\b</string>
					<key>name</key>
					<string>keyword.declaration.loop.while.swing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop-body</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.swing</string>
</dict>
</plist>